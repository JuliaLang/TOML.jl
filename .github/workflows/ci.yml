name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.0' # Replace this with the minimum Julia version that your package supports. E.g. if your package requires Julia 1.5 or higher, change this to '1.5'.
          - '1' # Leave this line unchanged. '1' will automatically expand to the latest stable 1.x release of Julia.
          - 'nightly'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      # - uses: julia-actions/julia-runtest@8ff46c64862da899d55166fdec94a39ee3249de0 # v1.5.1
      # - run: julia --color=yes --check-bounds=yes --inline=yes --depwarn=yes --project=@. -e 'using Pkg; Pkg.test(coverage=true)'
      - run: julia --project=@. -e 'using Pkg; Pkg.test(coverage=true)'
      - run: ls src
      - run: ls src/*.cov
      - run: cat src/*.cov
      # - uses: julia-actions/julia-processcoverage@v1
      - run: |
          using Pkg
          Pkg.activate("coveragetempenv", shared=true)
          Pkg.add(PackageSpec(name="CoverageTools"))

          using CoverageTools
          pf = process_folder()
          LCOV.writefile("lcov.info", pf)
        shell: julia --color=yes {0}
      - run: ls lcov.info
      - run: cat lcov.info
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
      - uses: actions/upload-artifact@v2
        with:
          name: lcov.info ${{ matrix.version }} ${{ matrix.os }} ${{ matrix.arch }}
          path: lcov.info
          if-no-files-found: error
  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: julia --project=benchmark/ -e 'using Pkg; Pkg.instantiate(); include("benchmark/benchmarks.jl"); run(SUITE)'
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: julia --project=docs -e 'using Pkg; Pkg.instantiate(); include("docs/make.jl")'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
